{"version":3,"file":"main.js","mappings":"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","sources":["webpack://sillytavern-cloud-sync/./public/main.ts","webpack://sillytavern-cloud-sync/webpack/startup"],"sourcesContent":["// SillyTavern Cloud Sync Frontend Logic\n\nconsole.log(\"Cloud Sync main.ts loaded.\");\n\n// Declare window extension for csrfToken with the correct type\ndeclare global {\n    interface Window { csrfToken?: string | null | undefined; }\n}\n\n// Global state\nlet currentProviders: any[] = []; // Consider defining a Provider type\nlet selectedDirectories = new Set<string>();\nlet activeGithubProviderId: string | undefined; // 存储当前激活的GitHub提供者ID\n\n// --- API Interaction ---\nconst API_BASE_URL = '/api/plugins/cloud-sync';\n\n// Function to make API calls (handles CSRF using window.csrfToken)\nasync function callApi(endpoint: string, method = 'GET', body: any = null): Promise<any> {\n    const headers = new Headers({\n        'Content-Type': 'application/json',\n        'Accept': '*/*',\n        'X-Requested-With': 'XMLHttpRequest'\n    });\n\n    // Read the LATEST CSRF token right before making the request\n    const currentCsrfToken = window.csrfToken; \n\n    if (currentCsrfToken) {\n        headers.set('X-CSRF-Token', currentCsrfToken);\n    } else if (['POST', 'PUT', 'DELETE'].includes(method.toUpperCase())) {\n         // If token is strictly needed for these methods and is missing, throw error\n        console.error(`CSRF token (window.csrfToken) is missing for ${method} request to ${endpoint}. Cannot perform action.`);\n        throw new Error(\"CSRF token is missing. Cannot perform action.\");\n    }\n    \n    const options: RequestInit = {\n        method,\n        headers,\n        credentials: 'include',\n        mode: 'same-origin',\n        cache: 'no-cache'\n    };\n\n    if (body && (method === 'POST' || method === 'PUT')) {\n        options.body = JSON.stringify(body);\n    }\n\n    try {\n        // Ensure endpoint starts with a slash and remove any duplicate slashes\n        const cleanEndpoint = endpoint.startsWith('/') ? endpoint : `/${endpoint}`;\n        const url = `${API_BASE_URL}${cleanEndpoint}`.replace(/\\/+/g, '/');\n        \n        const response = await fetch(url, options);\n        if (!response.ok) {\n            const errorData = await response.json().catch(() => ({ message: `HTTP Error: ${response.status}` }));\n            console.error(`API Error (${response.status}) on ${method} ${endpoint}:`, errorData);\n            throw new Error(errorData.message || `Request failed with status ${response.status}`);\n        }\n        if (response.status === 204) {\n            return null;\n        }\n        return await response.json();\n    } catch (error) {\n        console.error(`Network or API call error on ${method} ${endpoint}:`, error);\n        throw error;\n    }\n}\n\n// --- Initialization ---\nfunction initializeUI() {\n    console.log(\"Initializing Cloud Sync UI...\");\n    setupEventListeners();\n    loadProviderConfigurations(); // Load configurations first\n    loadConnectionStatus(); // Depends on loaded providers\n    loadSyncHistory();\n    loadDirectoryTree();\n    // loadProviderList(); // This is implicitly called by loadProviderConfigurations now\n}\n\n// Standard SillyTavern initialization pattern\nif (document.readyState === 'loading') {\n    document.addEventListener('DOMContentLoaded', initializeUI);\n} else {\n    initializeUI();\n}\n\n// Add this new function to prevent browser autofill from interfering with PAT display\nfunction preventBrowserInterference() {\n    console.log(\"Adding interference prevention for PAT field...\");\n    // Wait a short time to let any browser autofill happen first\n    setTimeout(() => {\n        const githubProvider = currentProviders.find(p => p.type === 'github');\n        if (githubProvider && githubProvider.config && githubProvider.config.token) {\n            const patInput = document.getElementById('github-pat') as HTMLInputElement;\n            if (patInput) {\n                console.log(\"Explicitly setting PAT field value to prevent browser interference\");\n                // Force reset the field value to what's in our provider config\n                patInput.value = githubProvider.config.token;\n            }\n        }\n    }, 500); // 500ms delay\n}\n\nfunction setupEventListeners() {\n    console.log(\"Setting up event listeners...\");\n    document.getElementById('webdav-connect-btn')?.addEventListener('click', saveWebdavConfig);\n    document.getElementById('github-connect-btn')?.addEventListener('click', saveGithubConfig);\n    document.getElementById('s3-connect-btn')?.addEventListener('click', saveS3Config);\n    document.getElementById('sftp-connect-btn')?.addEventListener('click', saveSftpConfig);\n    \n    // 添加GitHub配置管理相关的事件监听器\n    document.getElementById('github-config-select')?.addEventListener('change', handleGithubConfigChange);\n    document.getElementById('github-add-btn')?.addEventListener('click', addNewGithubConfig);\n    document.getElementById('github-delete-btn')?.addEventListener('click', deleteSelectedGithubConfig);\n    \n    // Add Git command button event listeners\n    document.getElementById('github-init-git-btn')?.addEventListener('click', initGitRepo);\n    document.getElementById('github-create-gitignore-btn')?.addEventListener('click', createGitIgnore);\n    document.getElementById('github-commit-btn')?.addEventListener('click', gitCommit);\n    document.getElementById('github-push-btn')?.addEventListener('click', gitPush);\n    document.getElementById('github-pull-btn')?.addEventListener('click', gitPull);\n    document.getElementById('github-status-btn')?.addEventListener('click', gitStatus);\n    \n    document.querySelectorAll('input[name=\"sftpAuth\"]').forEach(radio => {\n        radio.addEventListener('change', handleSftpAuthChange);\n    });\n    document.getElementById('expand-all-btn')?.addEventListener('click', expandAllDirs);\n    document.getElementById('collapse-all-btn')?.addEventListener('click', collapseAllDirs);\n    document.getElementById('select-all-btn')?.addEventListener('click', selectAllDirs);\n    document.getElementById('deselect-all-btn')?.addEventListener('click', deselectAllDirs);\n    document.getElementById('start-sync-btn')?.addEventListener('click', startSync);\n    handleSftpAuthChange(); \n}\n\n// --- Provider Configuration Handling --- \nasync function saveWebdavConfig() {\n    console.log(\"Attempting to save WebDAV config...\");\n    const urlInput = document.getElementById('webdav-url') as HTMLInputElement;\n    const usernameInput = document.getElementById('webdav-username') as HTMLInputElement;\n    const passwordInput = document.getElementById('webdav-password') as HTMLInputElement;\n    const pathInput = document.getElementById('webdav-path') as HTMLInputElement;\n    const statusElement = document.getElementById('webdav-auth-status');\n    const connectButton = document.getElementById('webdav-connect-btn') as HTMLButtonElement;\n\n    if (!urlInput || !usernameInput || !passwordInput || !pathInput || !statusElement || !connectButton) {\n        console.error(\"WebDAV form elements not found!\");\n        return;\n    }\n\n    const url = urlInput.value.trim();\n    const username = usernameInput.value.trim();\n    const password = passwordInput.value.trim();\n    let path = pathInput.value.trim();\n\n    // Basic validation\n    if (!url || !username) {\n        setStatus(statusElement, 'Please provide URL and username.', 'danger');\n        return;\n    }\n    \n    // Ensure path ends with a slash if provided\n    if (path && !path.endsWith('/')) {\n        path += '/';\n        pathInput.value = path;\n    }\n\n    const providerData = {\n        type: 'webdav',\n        name: `WebDAV: ${url.split('//')[1].split('/')[0]}`, // Generate a name from the server\n        enabled: true,\n        config: {\n            url: url,\n            username: username,\n            password: password,\n            path: path\n        },\n    };\n\n    setButtonLoading(connectButton, true);\n    setStatus(statusElement, 'Saving and testing connection...', 'info');\n\n    try {\n        const providers = await callApi('/providers');\n        const existingProvider = providers.find((p: any) => p.type === 'webdav');\n\n        let savedProvider;\n        if (existingProvider) {\n            // Update existing provider\n            console.log(`Updating existing WebDAV provider (ID: ${existingProvider.id})`);\n            const updateData = {\n                name: providerData.name,\n                enabled: providerData.enabled,\n                config: providerData.config,\n            };\n            savedProvider = await callApi(`/providers/${existingProvider.id}`, 'PUT', updateData);\n        } else {\n            // Add new provider\n            console.log(\"Adding new WebDAV provider\");\n            savedProvider = await callApi('/providers', 'POST', providerData);\n        }\n\n        // Test the connection after saving\n        console.log(`Testing connection for provider ID: ${savedProvider.id}`);\n        const testResult = await callApi(`/providers/${savedProvider.id}/test`, 'POST');\n\n        if (testResult.success) {\n            setStatus(statusElement, `WebDAV connection successful! Configuration saved.`, 'success');\n            loadProviderConfigurations(); // Refresh the provider list\n        } else {\n            setStatus(statusElement, `Configuration saved, but connection test failed: ${testResult.message}`, 'warning');\n        }\n    } catch (error: any) {\n        console.error(\"Error saving/testing WebDAV config:\", error);\n        setStatus(statusElement, `Error: ${error.message}`, 'danger');\n    } finally {\n        setButtonLoading(connectButton, false);\n    }\n}\n\nasync function saveGithubConfig() {\n    console.log(\"Attempting to save GitHub config...\");\n    const tokenInput = document.getElementById('github-pat') as HTMLInputElement;\n    const repoInput = document.getElementById('github-repo') as HTMLInputElement;\n    const branchInput = document.getElementById('github-branch') as HTMLInputElement;\n    const pathInput = document.getElementById('github-path') as HTMLInputElement;\n    const selectElement = document.getElementById('github-config-select') as HTMLSelectElement;\n    const statusElement = document.getElementById('github-auth-status');\n    const connectButton = document.getElementById('github-connect-btn') as HTMLButtonElement;\n\n    if (!tokenInput || !repoInput || !branchInput || !pathInput || !statusElement || !connectButton) {\n        console.error(\"GitHub form elements not found!\");\n        return;\n    }\n\n    const token = tokenInput.value.trim();\n    const repo = repoInput.value.trim();\n    const branch = branchInput.value.trim() || 'main'; // Default to 'main'\n    let pathPrefix = pathInput.value.trim();\n\n    // Basic validation\n    if (!token || !repo) {\n        setStatus(statusElement, '请同时提供个人访问令牌和仓库名称。', 'danger');\n        return;\n    }\n    // Ensure path prefix ends with a slash if provided\n    if (pathPrefix && !pathPrefix.endsWith('/')) {\n        pathPrefix += '/';\n        pathInput.value = pathPrefix; // Update the input field\n    }\n\n    const providerData = {\n        type: 'github',\n        name: `GitHub: ${repo}`, // Auto-generate a name\n        enabled: true,\n        config: {\n            token: token,\n            repo: repo,\n            branch: branch,\n            path: pathPrefix,\n        },\n    };\n\n    setButtonLoading(connectButton, true);\n    setStatus(statusElement, '保存并测试连接...', 'info');\n\n    try {\n        // 获取当前选择的配置ID或创建新配置\n        const selectedId = selectElement.value;\n        let savedProvider;\n        \n        // 查找是否已存在具有相同仓库、分支和路径的配置\n        // 这样可以防止重复保存相同的配置\n        const existingProviders = currentProviders.filter(p => \n            p.type === 'github' && \n            p.config.repo === repo && \n            p.config.branch === branch && \n            p.config.path === pathPrefix\n        );\n        \n        // 如果找到匹配的配置且与当前选择的不同\n        if (existingProviders.length > 0 && (!selectedId || existingProviders[0].id !== selectedId)) {\n            // 使用已存在的配置ID\n            const existingProvider = existingProviders[0];\n            console.log(`检测到相同GitHub仓库配置 (ID: ${existingProvider.id})，更新现有配置而不是创建新配置`);\n            \n            const updateData = {\n                name: providerData.name,\n                enabled: providerData.enabled,\n                config: providerData.config,\n            };\n            \n            savedProvider = await callApi(`/providers/${existingProvider.id}`, 'PUT', updateData);\n            \n            // 自动选择该配置\n            if (selectElement) {\n                selectElement.value = existingProvider.id;\n            }\n        } else if (selectedId && currentProviders.some(p => p.id === selectedId)) {\n            // 如果选择了有效的配置ID，则更新该配置\n            console.log(`更新现有GitHub配置 (ID: ${selectedId})`);\n            const updateData = {\n                name: providerData.name,\n                enabled: providerData.enabled,\n                config: providerData.config,\n            };\n            savedProvider = await callApi(`/providers/${selectedId}`, 'PUT', updateData);\n        } else {\n            // 添加全新的配置\n            console.log(\"添加新的GitHub配置\");\n            savedProvider = await callApi('/providers', 'POST', providerData);\n        }\n\n        // Test the connection after saving\n        console.log(`Testing connection for provider ID: ${savedProvider.id}`);\n        const testResult = await callApi(`/providers/${savedProvider.id}/test`, 'POST');\n\n        if (testResult.success) {\n            setStatus(statusElement, `GitHub连接成功！配置已保存。`, 'success');\n             \n            // 设置该配置为活动配置\n            await setActiveGithubProvider(savedProvider.id);\n             \n            // 重新加载配置列表\n            await loadProviderConfigurations();\n             \n            // Apply interference prevention to ensure PAT is displayed correctly\n            setTimeout(preventBrowserInterference, 1500);\n        } else {\n            setStatus(statusElement, `配置已保存，但连接测试失败: ${testResult.message}`, 'warning');\n        }\n    } catch (error: any) {\n        console.error(\"Error saving/testing GitHub config:\", error);\n        setStatus(statusElement, `错误: ${error.message}`, 'danger');\n    } finally {\n        setButtonLoading(connectButton, false);\n    }\n}\n\nasync function saveS3Config() {\n    console.log(\"Attempting to save S3 config...\");\n    const accessKeyInput = document.getElementById('s3-access-key-id') as HTMLInputElement;\n    const secretKeyInput = document.getElementById('s3-secret-access-key') as HTMLInputElement;\n    const bucketInput = document.getElementById('s3-bucket') as HTMLInputElement;\n    const regionInput = document.getElementById('s3-region') as HTMLInputElement;\n    const endpointInput = document.getElementById('s3-endpoint') as HTMLInputElement;\n    const prefixInput = document.getElementById('s3-path-prefix') as HTMLInputElement;\n    const statusElement = document.getElementById('s3-auth-status');\n    const connectButton = document.getElementById('s3-connect-btn') as HTMLButtonElement;\n\n    if (!accessKeyInput || !secretKeyInput || !bucketInput || !regionInput || !endpointInput || !prefixInput || !statusElement || !connectButton) {\n        console.error(\"S3 form elements not found!\");\n        return;\n    }\n\n    const accessKey = accessKeyInput.value.trim();\n    const secretKey = secretKeyInput.value.trim();\n    const bucket = bucketInput.value.trim();\n    const region = regionInput.value.trim() || 'us-east-1'; // Default region\n    const endpoint = endpointInput.value.trim();\n    let prefix = prefixInput.value.trim();\n\n    // Basic validation\n    if (!accessKey || !secretKey || !bucket) {\n        setStatus(statusElement, 'Please provide Access Key, Secret Access Key, and Bucket Name.', 'danger');\n        return;\n    }\n    \n    // Ensure prefix ends with a slash if provided\n    if (prefix && !prefix.endsWith('/')) {\n        prefix += '/';\n        prefixInput.value = prefix;\n    }\n\n    const providerData = {\n        type: 's3',\n        name: `S3: ${bucket}`, // Auto-generate a name\n        enabled: true,\n        config: {\n            accessKeyId: accessKey,\n            secretAccessKey: secretKey,\n            bucket: bucket,\n            region: region,\n            endpoint: endpoint || undefined, // Only include if provided\n            prefix: prefix || undefined\n        },\n    };\n\n    setButtonLoading(connectButton, true);\n    setStatus(statusElement, 'Saving and testing connection...', 'info');\n\n    try {\n        const providers = await callApi('/providers');\n        const existingProvider = providers.find((p: any) => p.type === 's3');\n\n        let savedProvider;\n        if (existingProvider) {\n            // Update existing provider\n            console.log(`Updating existing S3 provider (ID: ${existingProvider.id})`);\n            const updateData = {\n                name: providerData.name,\n                enabled: providerData.enabled,\n                config: providerData.config,\n            };\n            savedProvider = await callApi(`/providers/${existingProvider.id}`, 'PUT', updateData);\n        } else {\n            // Add new provider\n            console.log(\"Adding new S3 provider\");\n            savedProvider = await callApi('/providers', 'POST', providerData);\n        }\n\n        // Test the connection after saving\n        console.log(`Testing connection for provider ID: ${savedProvider.id}`);\n        const testResult = await callApi(`/providers/${savedProvider.id}/test`, 'POST');\n\n        if (testResult.success) {\n            setStatus(statusElement, `S3 connection successful! Configuration saved.`, 'success');\n            loadProviderConfigurations(); // Refresh the provider list\n        } else {\n            setStatus(statusElement, `Configuration saved, but connection test failed: ${testResult.message}`, 'warning');\n        }\n    } catch (error: any) {\n        console.error(\"Error saving/testing S3 config:\", error);\n        setStatus(statusElement, `Error: ${error.message}`, 'danger');\n    } finally {\n        setButtonLoading(connectButton, false);\n    }\n}\n\nasync function saveSftpConfig() {\n    console.log(\"Attempting to save SFTP config...\");\n    const hostInput = document.getElementById('sftp-host') as HTMLInputElement;\n    const portInput = document.getElementById('sftp-port') as HTMLInputElement;\n    const usernameInput = document.getElementById('sftp-username') as HTMLInputElement;\n    const passwordInput = document.getElementById('sftp-password') as HTMLInputElement;\n    const privateKeyInput = document.getElementById('sftp-privateKey') as HTMLTextAreaElement;\n    const passphraseInput = document.getElementById('sftp-passphrase') as HTMLInputElement;\n    const pathInput = document.getElementById('sftp-path') as HTMLInputElement;\n    const authTypeKeyInput = document.getElementById('sftpAuthKey') as HTMLInputElement;\n    const statusElement = document.getElementById('sftp-auth-status');\n    const connectButton = document.getElementById('sftp-connect-btn') as HTMLButtonElement;\n\n    if (!hostInput || !portInput || !usernameInput || !passwordInput || !privateKeyInput || \n        !passphraseInput || !pathInput || !authTypeKeyInput || !statusElement || !connectButton) {\n        console.error(\"SFTP form elements not found!\");\n        return;\n    }\n\n    const host = hostInput.value.trim();\n    const portStr = portInput.value.trim();\n    const port = portStr ? parseInt(portStr, 10) : 22; // Default to port 22\n    const username = usernameInput.value.trim();\n    const password = passwordInput.value.trim();\n    const privateKey = privateKeyInput.value.trim();\n    const passphrase = passphraseInput.value.trim();\n    const useKeyAuth = authTypeKeyInput.checked;\n    let path = pathInput.value.trim();\n\n    // Basic validation\n    if (!host || !username) {\n        setStatus(statusElement, 'Please provide Host and Username.', 'danger');\n        return;\n    }\n    \n    if (useKeyAuth && !privateKey) {\n        setStatus(statusElement, 'Private Key is required when using key authentication.', 'danger');\n        return;\n    }\n    \n    if (!useKeyAuth && !password) {\n        setStatus(statusElement, 'Password is required when using password authentication.', 'danger');\n        return;\n    }\n    \n    // Ensure path ends with a slash if provided\n    if (path && !path.endsWith('/')) {\n        path += '/';\n        pathInput.value = path;\n    }\n\n    const providerData = {\n        type: 'sftp',\n        name: `SFTP: ${username}@${host}:${port}`, // Auto-generate a name\n        enabled: true,\n        config: {\n            host: host,\n            port: port,\n            username: username,\n            // Only include the appropriate authentication method\n            ...(useKeyAuth \n                ? { \n                    privateKey: privateKey,\n                    ...(passphrase ? { passphrase: passphrase } : {})\n                } \n                : { password: password }),\n            path: path\n        },\n    };\n\n    setButtonLoading(connectButton, true);\n    setStatus(statusElement, 'Saving and testing connection...', 'info');\n\n    try {\n        const providers = await callApi('/providers');\n        const existingProvider = providers.find((p: any) => p.type === 'sftp');\n\n        let savedProvider;\n        if (existingProvider) {\n            // Update existing provider\n            console.log(`Updating existing SFTP provider (ID: ${existingProvider.id})`);\n            const updateData = {\n                name: providerData.name,\n                enabled: providerData.enabled,\n                config: providerData.config,\n            };\n            savedProvider = await callApi(`/providers/${existingProvider.id}`, 'PUT', updateData);\n        } else {\n            // Add new provider\n            console.log(\"Adding new SFTP provider\");\n            savedProvider = await callApi('/providers', 'POST', providerData);\n        }\n\n        // Test the connection after saving\n        console.log(`Testing connection for provider ID: ${savedProvider.id}`);\n        const testResult = await callApi(`/providers/${savedProvider.id}/test`, 'POST');\n\n        if (testResult.success) {\n            setStatus(statusElement, `SFTP connection successful! Configuration saved.`, 'success');\n            loadProviderConfigurations(); // Refresh the provider list\n        } else {\n            setStatus(statusElement, `Configuration saved, but connection test failed: ${testResult.message}`, 'warning');\n        }\n    } catch (error: any) {\n        console.error(\"Error saving/testing SFTP config:\", error);\n        setStatus(statusElement, `Error: ${error.message}`, 'danger');\n    } finally {\n        setButtonLoading(connectButton, false);\n    }\n}\n\n// Add this function back\nfunction handleSftpAuthChange() {\n    const sftpAuthKeyElement = document.getElementById('sftpAuthKey') as HTMLInputElement | null;\n    const sftpPassFieldsElement = document.getElementById('sftpPassFields');\n    const sftpKeyFieldsElement = document.getElementById('sftpKeyFields');\n    const useKeyAuth = sftpAuthKeyElement?.checked ?? false;\n    if(sftpPassFieldsElement) sftpPassFieldsElement.style.display = useKeyAuth ? 'none' : 'block';\n    if(sftpKeyFieldsElement) sftpKeyFieldsElement.style.display = useKeyAuth ? 'block' : 'none';\n}\n\n// --- Utility functions for UI feedback ---\nfunction setStatus(element: HTMLElement, message: string, type: 'info' | 'success' | 'warning' | 'danger') {\n    if (!element) return;\n    element.className = `alert alert-${type}`;\n    element.textContent = message;\n}\n\nfunction setButtonLoading(button: HTMLButtonElement, isLoading: boolean) {\n    if (!button) return;\n    if (isLoading) {\n        button.disabled = true;\n        button.innerHTML = `<span class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span> Saving...`;\n    } else {\n        button.disabled = false;\n        // Restore original text based on button ID\n        if (button.id === 'github-connect-btn') button.textContent = 'Save GitHub Config';\n        else if (button.id === 'webdav-connect-btn') button.textContent = 'Save WebDAV Config';\n        else if (button.id === 's3-connect-btn') button.textContent = 'Save S3 Config';\n        else if (button.id === 'sftp-connect-btn') button.textContent = 'Save SFTP Config';\n        else button.textContent = 'Save'; // Default fallback\n    }\n}\n\n// --- Provider List ---\nasync function loadProviderConfigurations() {\n    console.log(\"Loading provider configurations...\");\n    try {\n        const response = await callApi('/providers');\n        currentProviders = response.providers; // 更新全局提供者列表\n        activeGithubProviderId = response.activeGithubProviderId; // 存储活动GitHub提供者ID\n\n        // Update UI based on loaded providers\n        populateProviderForms(); // 现已更新以处理多个GitHub配置\n        \n        // Update the Start Sync button state based on enabled providers\n        const startSyncBtn = document.getElementById('start-sync-btn') as HTMLButtonElement | null;\n        if (startSyncBtn) {\n            startSyncBtn.disabled = currentProviders.filter((p: any) => p.enabled).length === 0;\n        }\n        \n        // Also update connection status display now that we have the data\n        loadConnectionStatus();\n\n        // Apply interference prevention as a final step (after a delay)\n        setTimeout(preventBrowserInterference, 1000);\n\n        return currentProviders;\n    } catch (error: any) {\n        console.error(\"Error loading provider configurations:\", error);\n        // Handle error in UI, maybe show a message\n        const connectionStatusElement = document.getElementById('connection-status');\n        if (connectionStatusElement) {\n            connectionStatusElement.innerHTML = `<div class=\"alert alert-danger\">Error loading provider configurations: ${error.message}</div>`;\n        }\n        // Disable sync button on error\n        const startSyncBtn = document.getElementById('start-sync-btn') as HTMLButtonElement | null;\n        if (startSyncBtn) startSyncBtn.disabled = true;\n        return [];\n    }\n}\n\n// New function to populate forms with loaded provider data\nfunction populateProviderForms(providerId?: string) {\n    // 填充GitHub表单\n    const githubProviders = currentProviders.filter(p => p.type === 'github');\n    const selectElement = document.getElementById('github-config-select') as HTMLSelectElement;\n    \n    if (selectElement) {\n        // 保存当前选择值\n        const currentSelection = selectElement.value;\n        \n        // 清空下拉列表\n        selectElement.innerHTML = '<option value=\"\">-- Select a configuration --</option>';\n        \n        // 添加所有GitHub配置到下拉列表\n        githubProviders.forEach(provider => {\n            const option = document.createElement('option');\n            option.value = provider.id;\n            option.textContent = provider.name;\n            option.selected = provider.id === (providerId || activeGithubProviderId);\n            selectElement.appendChild(option);\n        });\n        \n        // 如果没有选中项但有之前的选择，则恢复之前的选择\n        if (!selectElement.value && currentSelection) {\n            selectElement.value = currentSelection;\n        }\n    }\n    \n    // 获取要显示的GitHub配置\n    let githubProvider;\n    if (providerId) {\n        // 使用指定的提供者ID\n        githubProvider = currentProviders.find(p => p.id === providerId);\n    } else if (activeGithubProviderId) {\n        // 使用活动的GitHub提供者ID\n        githubProvider = currentProviders.find(p => p.id === activeGithubProviderId);\n    } else if (githubProviders.length > 0) {\n        // 如果没有活动ID但有GitHub配置，使用第一个\n        githubProvider = githubProviders[0];\n    }\n    \n    // 填充GitHub表单字段\n    if (githubProvider && githubProvider.config) {\n        const repoInput = document.getElementById('github-repo') as HTMLInputElement;\n        const branchInput = document.getElementById('github-branch') as HTMLInputElement;\n        const pathInput = document.getElementById('github-path') as HTMLInputElement;\n        const patInput = document.getElementById('github-pat') as HTMLInputElement;\n        const statusElement = document.getElementById('github-auth-status');\n\n        if (repoInput) repoInput.value = githubProvider.config.repo || '';\n        if (branchInput) branchInput.value = githubProvider.config.branch || 'main';\n        if (pathInput) pathInput.value = githubProvider.config.path || '';\n        if (patInput) patInput.value = githubProvider.config.token || '';\n        \n        if (statusElement) {\n             const message = githubProvider.config.token \n                 ? `GitHub配置已加载 - 仓库: ${githubProvider.config.repo}. PAT已加载.`\n                 : `GitHub配置已加载 - 仓库: ${githubProvider.config.repo}. 请输入PAT进行测试/保存.`;\n             setStatus(statusElement, message, 'info');\n        }\n        \n        // 更新按钮状态\n        const deleteBtn = document.getElementById('github-delete-btn') as HTMLButtonElement;\n        if (deleteBtn) {\n            deleteBtn.disabled = !githubProvider.id;\n        }\n    } else {\n        // 清空表单\n        const repoInput = document.getElementById('github-repo') as HTMLInputElement;\n        const branchInput = document.getElementById('github-branch') as HTMLInputElement;\n        const pathInput = document.getElementById('github-path') as HTMLInputElement;\n        const patInput = document.getElementById('github-pat') as HTMLInputElement;\n        const statusElement = document.getElementById('github-auth-status');\n        \n        if (repoInput) repoInput.value = '';\n        if (branchInput) branchInput.value = 'main';\n        if (pathInput) pathInput.value = '';\n        if (patInput) patInput.value = '';\n        \n        if (statusElement) {\n            setStatus(statusElement, '请输入GitHub个人访问令牌和仓库详情。', 'info');\n        }\n        \n        // 禁用删除按钮\n        const deleteBtn = document.getElementById('github-delete-btn') as HTMLButtonElement;\n        if (deleteBtn) {\n            deleteBtn.disabled = true;\n        }\n    }\n\n    // 填充其他提供者表单 (WebDAV, S3, SFTP) - 保持原有代码\n    // ... existing code for other providers ...\n\n    // 应用干扰预防\n    preventBrowserInterference();\n}\n\n// 添加GitHub配置处理事件\nasync function handleGithubConfigChange() {\n    const selectElement = document.getElementById('github-config-select') as HTMLSelectElement;\n    const selectedId = selectElement.value;\n    \n    if (selectedId) {\n        // 设置为活动配置\n        await setActiveGithubProvider(selectedId);\n        // 更新表单显示\n        populateProviderForms(selectedId);\n    } else {\n        // 清空表单\n        const repoInput = document.getElementById('github-repo') as HTMLInputElement;\n        const branchInput = document.getElementById('github-branch') as HTMLInputElement;\n        const pathInput = document.getElementById('github-path') as HTMLInputElement;\n        const patInput = document.getElementById('github-pat') as HTMLInputElement;\n        \n        if (repoInput) repoInput.value = '';\n        if (branchInput) branchInput.value = 'main';\n        if (pathInput) pathInput.value = '';\n        if (patInput) patInput.value = '';\n        \n        // 禁用删除按钮\n        const deleteBtn = document.getElementById('github-delete-btn') as HTMLButtonElement;\n        if (deleteBtn) {\n            deleteBtn.disabled = true;\n        }\n    }\n}\n\n// 添加新的GitHub配置\nfunction addNewGithubConfig() {\n    // 清空选择和表单\n    const selectElement = document.getElementById('github-config-select') as HTMLSelectElement;\n    if (selectElement) {\n        selectElement.value = '';\n    }\n    \n    const repoInput = document.getElementById('github-repo') as HTMLInputElement;\n    const branchInput = document.getElementById('github-branch') as HTMLInputElement;\n    const pathInput = document.getElementById('github-path') as HTMLInputElement;\n    const patInput = document.getElementById('github-pat') as HTMLInputElement;\n    const statusElement = document.getElementById('github-auth-status');\n    \n    if (repoInput) repoInput.value = '';\n    if (branchInput) branchInput.value = 'main';\n    if (pathInput) pathInput.value = '';\n    if (patInput) patInput.value = '';\n    \n    if (statusElement) {\n        setStatus(statusElement, '请输入新GitHub配置的详情。', 'info');\n    }\n    \n    // 禁用删除按钮\n    const deleteBtn = document.getElementById('github-delete-btn') as HTMLButtonElement;\n    if (deleteBtn) {\n        deleteBtn.disabled = true;\n    }\n}\n\n// 删除选中的GitHub配置\nasync function deleteSelectedGithubConfig() {\n    const selectElement = document.getElementById('github-config-select') as HTMLSelectElement;\n    const selectedId = selectElement.value;\n    \n    if (!selectedId) {\n        return;\n    }\n    \n    if (!confirm('确定要删除此GitHub配置吗？')) {\n        return;\n    }\n    \n    try {\n        await callApi(`/providers/${selectedId}`, 'DELETE');\n        \n        // 重新加载配置列表\n        await loadProviderConfigurations();\n        \n        // 清空表单\n        addNewGithubConfig();\n    } catch (error: any) {\n        console.error('Error deleting GitHub config:', error);\n        alert(`删除配置失败: ${error.message}`);\n    }\n}\n\n// 设置活动的GitHub提供者\nasync function setActiveGithubProvider(providerId: string) {\n    try {\n        await callApi('/providers/github/active', 'POST', { providerId });\n        activeGithubProviderId = providerId;\n    } catch (error: any) {\n        console.error('Error setting active GitHub provider:', error);\n    }\n}\n\n// --- Connection Status & Sync History ---\nasync function loadConnectionStatus() {\n    const statusElement = document.getElementById('connection-status');\n    if (!statusElement) return;\n    \n    try {\n        if (currentProviders.length === 0) {\n            statusElement.innerHTML = `<div class=\"alert alert-warning\">Not connected to any cloud storage service</div>`;\n            return;\n        }\n        \n        const enabledProviders = currentProviders.filter((p: any) => p.enabled);\n        \n        if (enabledProviders.length === 0) {\n            statusElement.innerHTML = `<div class=\"alert alert-warning\">All providers are disabled</div>`;\n            return;\n        }\n        \n        let html = `<div class=\"alert alert-success\"><strong>Active connections:</strong><ul class=\"mb-0 mt-2\">`;\n        \n        enabledProviders.forEach((provider: any) => {\n            let details = '';\n            switch (provider.type) {\n                case 'github':\n                    details = `Repository: ${provider.config.repo}, Branch: ${provider.config.branch || 'main'}`;\n                    break;\n                case 'webdav':\n                    details = `Server: ${provider.config.url.split('//')[1].split('/')[0]}`;\n                    break;\n                case 's3':\n                    details = `Bucket: ${provider.config.bucket}, Region: ${provider.config.region}`;\n                    break;\n                case 'sftp':\n                    details = `${provider.config.username}@${provider.config.host}:${provider.config.port || 22}`;\n                    break;\n            }\n            \n            html += `<li><i class=\"bi bi-cloud-check\"></i> <strong>${provider.type.toUpperCase()}</strong>: ${details}</li>`;\n        });\n        \n        html += `</ul></div>`;\n        statusElement.innerHTML = html;\n        \n        // Enable the start sync button if there are active providers\n        const startSyncBtn = document.getElementById('start-sync-btn') as HTMLButtonElement | null;\n        if (startSyncBtn) {\n            startSyncBtn.disabled = enabledProviders.length === 0;\n        }\n        \n    } catch (error: any) {\n        console.error(\"Error updating connection status:\", error);\n        statusElement.innerHTML = `<div class=\"alert alert-danger\">Error loading connection status: ${error.message}</div>`;\n    }\n}\n\nasync function loadSyncHistory() {\n    const historyElement = document.getElementById('sync-history');\n    if (!historyElement) return;\n    \n    try {\n        const syncStatus = await callApi('/sync/status');\n        \n        if (!syncStatus || Object.keys(syncStatus).length === 0) {\n            historyElement.innerHTML = `<div class=\"text-center text-muted\">No sync history available</div>`;\n            return;\n        }\n        \n        let html = '';\n        \n        // Convert syncStatus object to array and sort by timestamp (most recent first)\n        const statusEntries = Object.entries(syncStatus)\n            .map(([providerId, data]) => ({ \n                providerId, \n                ...data as any, \n                providerInfo: currentProviders.find((p: any) => p.id === providerId) \n            }))\n            .sort((a, b) => (b.lastSyncTime || 0) - (a.lastSyncTime || 0));\n            \n        statusEntries.forEach(entry => {\n            const provider = entry.providerInfo;\n            if (!provider) return; // Skip entries for providers that no longer exist\n            \n            const timestamp = entry.lastSyncTime \n                ? new Date(entry.lastSyncTime).toLocaleString() \n                : 'Never';\n                \n            const statusClass = entry.status === 'success' \n                ? 'success' \n                : entry.status === 'error' ? 'failed' : '';\n                \n            const statusIcon = entry.status === 'success' \n                ? '<i class=\"bi bi-check-circle text-success\"></i>' \n                : entry.status === 'error' ? '<i class=\"bi bi-x-circle text-danger\"></i>' \n                : entry.status === 'in_progress' ? '<i class=\"bi bi-arrow-repeat text-primary\"></i>'\n                : '<i class=\"bi bi-dash-circle text-muted\"></i>';\n                \n            html += `\n            <div class=\"sync-history-item ${statusClass} mb-3\">\n                <div><strong>${provider.name}</strong> (${provider.type})</div>\n                <div class=\"d-flex justify-content-between align-items-center\">\n                    <div>${statusIcon} ${entry.status === 'success' ? 'Success' : entry.status === 'error' ? 'Failed' : entry.status === 'in_progress' ? 'In progress' : 'Not synced'}</div>\n                    <div class=\"text-muted small\">${timestamp}</div>\n                </div>\n                ${entry.lastSyncError ? `<div class=\"text-danger small mt-1\">${entry.lastSyncError}</div>` : ''}\n            </div>`;\n        });\n        \n        if (html) {\n            historyElement.innerHTML = html;\n        } else {\n            historyElement.innerHTML = `<div class=\"text-center text-muted\">No sync history available</div>`;\n        }\n    } catch (error: any) {\n        console.error(\"Error loading sync history:\", error);\n        historyElement.innerHTML = `<div class=\"text-danger\">Error loading sync history: ${error.message}</div>`;\n    }\n}\n\n// --- Directory Tree Handling --- \ninterface DirectoryNode {\n    name: string;\n    path: string; \n    type: 'directory' | 'file';\n    size?: number;\n    children?: DirectoryNode[];\n}\n\nasync function loadDirectoryTree() {\n    const treeContainer = document.getElementById('directory-tree');\n    if (!treeContainer) return;\n    treeContainer.innerHTML = `<div class=\"d-flex justify-content-center p-3\"><div class=\"spinner-border text-primary\" role=\"status\"><span class=\"visually-hidden\">Loading...</span></div><span class=\"ms-2\">Loading directory structure...</span></div>`;\n    try {\n        const treeData: DirectoryNode[] = await callApi('/directory-tree');\n        renderDirectoryTree(treeData, treeContainer);\n        // Restore selection state if needed\n        restoreTreeSelection(treeContainer);\n        updateAllParentCheckboxes(treeContainer);\n    } catch (error: any) {\n        treeContainer.innerHTML = `<div class=\"text-danger text-center p-3\">Error loading directory tree: ${error.message}</div>`;\n    }\n}\n\nfunction renderDirectoryTree(nodes: DirectoryNode[], parentElement: HTMLElement, depth = 0) {\n    if (depth === 0) parentElement.innerHTML = '';\n    nodes.forEach(node => {\n        const itemElement = document.createElement('div');\n        itemElement.classList.add('tree-item');\n        itemElement.dataset.path = node.path;\n        itemElement.dataset.type = node.type;\n        const contentElement = document.createElement('div');\n        contentElement.classList.add('tree-item-content');\n        const toggleElement = document.createElement('span');\n        toggleElement.classList.add('tree-toggle');\n        if (node.type === 'directory') {\n            toggleElement.innerHTML = '<i class=\"bi bi-chevron-right\"></i>';\n            toggleElement.onclick = (e) => { e.stopPropagation(); toggleDirectory(itemElement); };\n        } else {\n             toggleElement.innerHTML = '&nbsp;';\n        }\n        const checkbox = document.createElement('input');\n        checkbox.type = 'checkbox';\n        checkbox.classList.add('tree-item-checkbox', 'form-check-input');\n        checkbox.dataset.path = node.path;\n        checkbox.onchange = () => handleCheckboxChange(checkbox);\n        const iconElement = document.createElement('i');\n        iconElement.classList.add('tree-icon', 'bi', node.type === 'directory' ? 'bi-folder' : 'bi-file-earmark');\n        if (node.type === 'file') iconElement.classList.add('file');\n        const labelElement = document.createElement('span');\n        labelElement.classList.add('tree-item-label');\n        labelElement.textContent = node.name;\n        labelElement.onclick = () => { checkbox.checked = !checkbox.checked; handleCheckboxChange(checkbox); };\n        contentElement.appendChild(toggleElement);\n        contentElement.appendChild(checkbox);\n        contentElement.appendChild(iconElement);\n        contentElement.appendChild(labelElement);\n        if (node.type === 'file' && node.size !== undefined) {\n            const sizeElement = document.createElement('span');\n            sizeElement.classList.add('tree-item-size');\n            sizeElement.textContent = formatBytes(node.size);\n            contentElement.appendChild(sizeElement);\n        }\n        itemElement.appendChild(contentElement);\n        if (node.type === 'directory' && node.children && node.children.length > 0) {\n            const childrenContainer = document.createElement('div');\n            childrenContainer.classList.add('tree-children');\n            renderDirectoryTree(node.children, childrenContainer, depth + 1);\n            itemElement.appendChild(childrenContainer);\n        }\n        parentElement.appendChild(itemElement);\n    });\n}\n\nfunction toggleDirectory(itemElement: HTMLElement) {\n    const childrenContainer = itemElement.querySelector('.tree-children') as HTMLElement | null;\n    const toggleIcon = itemElement.querySelector('.tree-toggle i');\n    if (childrenContainer && toggleIcon) {\n        const isExpanded = childrenContainer.classList.toggle('expanded');\n        toggleIcon.classList.toggle('bi-chevron-right', !isExpanded);\n        toggleIcon.classList.toggle('bi-chevron-down', isExpanded);\n    }\n}\n\nfunction handleCheckboxChange(checkbox: HTMLInputElement) {\n    const path = checkbox.dataset.path;\n    if (!path) return;\n    const isChecked = checkbox.checked;\n    if (isChecked) selectedDirectories.add(path);\n    else selectedDirectories.delete(path);\n    const itemElement = checkbox.closest('.tree-item') as HTMLElement | null;\n    if (itemElement?.dataset.type === 'directory') {\n        const childrenCheckboxes = itemElement.querySelectorAll('.tree-item-checkbox') as NodeListOf<HTMLInputElement>;\n        childrenCheckboxes.forEach(childCheckbox => {\n            if (childCheckbox !== checkbox) {\n                 const childPath = childCheckbox.dataset.path;\n                 childCheckbox.checked = isChecked;\n                 if (childPath) {\n                     if (isChecked) selectedDirectories.add(childPath);\n                     else selectedDirectories.delete(childPath);\n                 }\n                 childCheckbox.indeterminate = false;\n                 childCheckbox.classList.remove('indeterminate'); \n            }\n        });\n    }\n    updateParentCheckboxes(itemElement);\n}\n\nfunction updateParentCheckboxes(itemElement: HTMLElement | null) {\n    let current = itemElement?.parentElement?.closest('.tree-item') as HTMLElement | null;\n    while(current) {\n        const parentCheckbox = current.querySelector(':scope > .tree-item-content > .tree-item-checkbox') as HTMLInputElement | null;\n        if (!parentCheckbox) break;\n        const childrenCheckboxes = current.querySelectorAll(':scope > .tree-children > .tree-item > .tree-item-content > .tree-item-checkbox') as NodeListOf<HTMLInputElement>;\n        let allChecked = true, noneChecked = true;\n        if (childrenCheckboxes.length === 0) {\n             allChecked = parentCheckbox.checked;\n             noneChecked = !parentCheckbox.checked;\n        } else {\n            childrenCheckboxes.forEach(cb => {\n                if (cb.checked || cb.indeterminate) noneChecked = false;\n                if (!cb.checked || cb.indeterminate) allChecked = false;\n            });\n        }\n        parentCheckbox.checked = allChecked;\n        parentCheckbox.indeterminate = !allChecked && !noneChecked;\n        parentCheckbox.classList.toggle('indeterminate', parentCheckbox.indeterminate);\n        const parentPath = parentCheckbox.dataset.path;\n        if (parentPath) {\n            if (parentCheckbox.checked || parentCheckbox.indeterminate) selectedDirectories.add(parentPath);\n            else selectedDirectories.delete(parentPath);\n        }\n        current = current.parentElement?.closest('.tree-item') as HTMLElement | null; \n    }\n}\n\nfunction updateAllParentCheckboxes(rootElement: HTMLElement) {\n     const allCheckboxes = rootElement.querySelectorAll('.tree-item-checkbox') as NodeListOf<HTMLInputElement>;\n     for (let i = allCheckboxes.length - 1; i >= 0; i--) {\n         const cb = allCheckboxes[i];\n         const itemElement = cb.closest('.tree-item') as HTMLElement | null;\n         updateParentCheckboxes(itemElement);\n     }\n}\n\nfunction restoreTreeSelection(rootElement: HTMLElement) {\n    rootElement.querySelectorAll('.tree-item-checkbox').forEach(el => {\n        const checkbox = el as HTMLInputElement;\n        const path = checkbox.dataset.path;\n        if (path && selectedDirectories.has(path)) {\n            checkbox.checked = true;\n        } else {\n             checkbox.checked = false;\n        }\n         checkbox.indeterminate = false;\n         checkbox.classList.remove('indeterminate');\n    });\n}\n\nfunction formatBytes(bytes: number, decimals = 2): string {\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const dm = decimals < 0 ? 0 : decimals;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n}\n\nfunction expandAllDirs() {\n    document.querySelectorAll('.tree-children').forEach(el => el.classList.add('expanded'));\n    document.querySelectorAll('.tree-toggle i.bi-chevron-right').forEach(el => el.classList.replace('bi-chevron-right', 'bi-chevron-down'));\n}\nfunction collapseAllDirs() {\n    document.querySelectorAll('.tree-children.expanded').forEach(el => el.classList.remove('expanded'));\n    document.querySelectorAll('.tree-toggle i.bi-chevron-down').forEach(el => el.classList.replace('bi-chevron-down', 'bi-chevron-right'));\n}\nfunction selectAllDirs() {\n    document.querySelectorAll('.tree-item-checkbox').forEach(el => {\n        const checkbox = el as HTMLInputElement;\n        const path = checkbox.dataset.path;\n        checkbox.checked = true;\n        checkbox.indeterminate = false;\n        checkbox.classList.remove('indeterminate');\n        if (path) selectedDirectories.add(path);\n    });\n    updateAllParentCheckboxes(document.getElementById('directory-tree')!);\n}\nfunction deselectAllDirs() {\n    document.querySelectorAll('.tree-item-checkbox').forEach(el => {\n        const checkbox = el as HTMLInputElement;\n        const path = checkbox.dataset.path;\n        checkbox.checked = false;\n        checkbox.indeterminate = false;\n        checkbox.classList.remove('indeterminate');\n        if (path) selectedDirectories.delete(path);\n    });\n}\n\n// --- Sync Operations ---\nasync function startSync() {\n    const syncModeElement = document.getElementById('sync-mode') as HTMLSelectElement | null;\n    const useHashElement = document.getElementById('compare-hash') as HTMLInputElement | null;\n    if (!syncModeElement || !useHashElement) return console.error(\"Sync setting elements not found\");\n    \n    const syncMode = syncModeElement.value;\n    const useHash = useHashElement.checked;\n    const selectedPaths = Array.from(selectedDirectories);\n    \n    if (selectedPaths.length === 0) {\n        return alert(\"Please select directories or files to sync.\");\n    }\n    \n    console.log(`Starting sync: ${syncMode}, Hash: ${useHash}, Paths:`, selectedPaths);\n    \n    // UI elements for progress display\n    const progressElement = document.getElementById('sync-progress');\n    const progressBar = document.getElementById('progress-bar');\n    const progressText = document.getElementById('progress-text');\n    const progressDetails = document.getElementById('progress-details');\n    \n    if (!progressElement || !progressBar || !progressText || !progressDetails) {\n        return console.error(\"Progress elements not found\");\n    }\n    \n    // Show progress UI\n    progressElement.style.display = 'block';\n    progressBar.style.width = '0%';\n    progressBar.className = 'progress-bar'; // Reset color\n    progressBar.setAttribute('aria-valuenow', '0');\n    progressText.textContent = 'Initiating sync...';\n    progressDetails.textContent = '';\n    \n    try {\n        // Get enabled providers\n        const enabledProviders = currentProviders.filter((p: any) => p.enabled);\n        \n        if (enabledProviders.length === 0) {\n            throw new Error('No enabled providers found for sync operation.');\n        }\n        \n        // Determine which API endpoint to call based on sync mode\n        let apiEndpoint = '';\n        let requestBody = {\n            selectedPaths,\n            useHash,\n            mode: syncMode\n        };\n        \n        if (syncMode === 'download-only') {\n            // For download, we need to select a provider to download from\n            if (enabledProviders.length === 1) {\n                // If only one provider, use it automatically\n                apiEndpoint = `/sync/download/${enabledProviders[0].id}`;\n            } else {\n                // If multiple providers, show a selection modal (you'd need to implement this)\n                const providerId = prompt(\n                    `Select a provider to download from (enter the number):\\n${\n                        enabledProviders.map((p: any, i: number) => `${i+1}. ${p.name} (${p.type})`).join('\\n')\n                    }`\n                );\n                \n                if (!providerId || isNaN(parseInt(providerId))) {\n                    throw new Error('No valid provider selected for download.');\n                }\n                \n                const index = parseInt(providerId) - 1;\n                if (index < 0 || index >= enabledProviders.length) {\n                    throw new Error('Invalid provider selection.');\n                }\n                \n                apiEndpoint = `/sync/download/${enabledProviders[index].id}`;\n            }\n        } else {\n            // For upload, bidirectional, or mirror mode\n            apiEndpoint = '/sync/upload'; // This endpoint should handle the different modes\n        }\n        \n        // Update progress to 10%\n        progressBar.style.width = '10%';\n        progressBar.setAttribute('aria-valuenow', '10');\n        progressText.textContent = 'Sending sync request...';\n        \n        // Call the API to start sync\n        await callApi(apiEndpoint, 'POST', requestBody);\n        \n        // Update progress to show that the request was sent successfully\n        progressBar.style.width = '30%';\n        progressBar.setAttribute('aria-valuenow', '30');\n        progressText.textContent = 'Sync operation started on server...';\n        progressDetails.textContent = 'The sync is now running on the server. Check sync history for updates.';\n        \n        // Start polling for sync status\n        let statusCheckCount = 0;\n        const statusCheckInterval = setInterval(async () => {\n            try {\n                const status = await callApi('/sync/status');\n                \n                // Check if any provider is still in progress\n                const inProgress = Object.values(status).some((s: any) => s.status === 'in_progress');\n                \n                if (!inProgress || statusCheckCount >= 10) { // Cap at 10 checks to avoid infinite polling\n                    clearInterval(statusCheckInterval);\n                    \n                    // Update progress to complete\n                    progressBar.style.width = '100%';\n                    progressBar.setAttribute('aria-valuenow', '100');\n                    \n                    // Check for any errors\n                    const hasErrors = Object.values(status).some((s: any) => s.status === 'error');\n                    \n                    if (hasErrors) {\n                        progressText.textContent = 'Sync completed with errors';\n                        progressBar.classList.add('bg-warning');\n                    } else {\n                        progressText.textContent = 'Sync completed successfully';\n                        progressBar.classList.add('bg-success');\n                    }\n                    \n                    // Refresh sync history\n                    loadSyncHistory();\n                } else {\n                    // Still in progress, update progress bar\n                    const progress = Math.min(30 + (statusCheckCount * 7), 90); // Cap at 90% until complete\n                    progressBar.style.width = `${progress}%`;\n                    progressBar.setAttribute('aria-valuenow', progress.toString());\n                    statusCheckCount++;\n                }\n            } catch (error) {\n                console.error(\"Error checking sync status:\", error);\n                clearInterval(statusCheckInterval);\n                \n                // Show error in progress bar\n                progressText.textContent = 'Error checking sync status';\n                progressBar.classList.add('bg-danger');\n            }\n        }, 2000); // Check every 2 seconds\n        \n    } catch (error: any) {\n        console.error(\"Sync operation failed:\", error);\n        progressText.textContent = `Sync failed: ${error.message}`;\n        progressBar.classList.add('bg-danger');\n        progressBar.style.width = '100%';\n        progressBar.setAttribute('aria-valuenow', '100');\n    }\n}\n\n// --- Git Command Functions ---\nasync function initGitRepo() {\n    // Git命令现在使用活动的GitHub配置，不需要传递配置参数\n    const outputElement = document.getElementById('git-init-output');\n    \n    if (!outputElement) return;\n    \n    // 检查是否有活动的GitHub配置\n    if (!activeGithubProviderId) {\n        showGitOutput(outputElement, '请先选择或创建GitHub配置。', 'danger');\n        return;\n    }\n    \n    showGitOutput(outputElement, '在数据目录中初始化Git仓库...', 'info');\n    \n    try {\n        // 不需要传递配置参数，后端将使用活动配置\n        const result = await callApi('/git/init', 'POST');\n        showGitOutput(outputElement, result.message, result.success ? 'success' : 'danger');\n    } catch (error: any) {\n        showGitOutput(outputElement, `错误: ${error.message}`, 'danger');\n    }\n}\n\nasync function createGitIgnore() {\n    const outputElement = document.getElementById('git-gitignore-output');\n    if (!outputElement) return;\n    \n    showGitOutput(outputElement, '创建.gitignore文件...', 'info');\n    \n    try {\n        const result = await callApi('/git/gitignore', 'POST');\n        showGitOutput(outputElement, result.message, result.success ? 'success' : 'danger');\n    } catch (error: any) {\n        showGitOutput(outputElement, `错误: ${error.message}`, 'danger');\n    }\n}\n\nasync function gitCommit() {\n    await runGitCommand('commit', '提交更改...');\n}\n\nasync function gitPush() {\n    await runGitCommand('push', '推送到远程...');\n}\n\nasync function gitPull() {\n    await runGitCommand('pull', '从远程拉取...');\n}\n\nasync function gitStatus() {\n    await runGitCommand('status', '检查状态...');\n}\n\nasync function runGitCommand(command: string, statusMessage: string) {\n    const outputElement = document.getElementById('git-command-output');\n    if (!outputElement) return;\n    \n    outputElement.style.display = 'block';\n    showGitOutput(outputElement, statusMessage, 'info');\n    \n    try {\n        const result = await callApi(`/git/${command}`, 'POST');\n        showGitOutput(outputElement, result.output || result.message, result.success ? 'success' : 'danger');\n    } catch (error: any) {\n        showGitOutput(outputElement, `错误: ${error.message}`, 'danger');\n    }\n}\n\nfunction showGitOutput(element: HTMLElement, message: string, type: 'info' | 'success' | 'danger' | 'warning') {\n    element.style.display = 'block';\n    element.className = `small mt-2 text-${type === 'info' ? 'muted' : type}`;\n    \n    // For multiline output (like git status), preserve formatting\n    if (message.includes('\\n')) {\n        element.innerHTML = `<pre class=\"mb-0 p-2 bg-light\" style=\"white-space: pre-wrap;\">${escapeHtml(message)}</pre>`;\n    } else {\n        element.textContent = message;\n    }\n}\n\nfunction escapeHtml(text: string): string {\n    const div = document.createElement('div');\n    div.textContent = text;\n    return div.innerHTML;\n}\n\n// Add this line at the very end to ensure the file is treated as a module\nexport {}; ","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = {};\n__webpack_modules__[662](0, __webpack_exports__);\n"],"names":["console","log","activeGithubProviderId","currentProviders","selectedDirectories","Set","callApi","endpoint","method","body","headers","Headers","currentCsrfToken","window","csrfToken","set","includes","toUpperCase","error","Error","options","credentials","mode","cache","JSON","stringify","url","startsWith","replace","response","fetch","ok","errorData","json","catch","message","status","initializeUI","document","getElementById","addEventListener","saveWebdavConfig","saveGithubConfig","saveS3Config","saveSftpConfig","handleGithubConfigChange","addNewGithubConfig","deleteSelectedGithubConfig","initGitRepo","createGitIgnore","gitCommit","gitPush","gitPull","gitStatus","querySelectorAll","forEach","radio","handleSftpAuthChange","expandAllDirs","collapseAllDirs","selectAllDirs","deselectAllDirs","startSync","loadProviderConfigurations","loadConnectionStatus","loadSyncHistory","treeContainer","innerHTML","renderDirectoryTree","el","checkbox","path","dataset","has","checked","indeterminate","classList","remove","updateAllParentCheckboxes","loadDirectoryTree","preventBrowserInterference","setTimeout","githubProvider","find","p","type","config","token","patInput","value","urlInput","usernameInput","passwordInput","pathInput","statusElement","connectButton","trim","username","password","setStatus","endsWith","providerData","name","split","enabled","setButtonLoading","existingProvider","savedProvider","id","updateData","testResult","success","tokenInput","repoInput","branchInput","selectElement","repo","branch","pathPrefix","selectedId","existingProviders","filter","length","some","setActiveGithubProvider","accessKeyInput","secretKeyInput","bucketInput","regionInput","endpointInput","prefixInput","accessKey","secretKey","bucket","region","prefix","accessKeyId","secretAccessKey","undefined","hostInput","portInput","privateKeyInput","passphraseInput","authTypeKeyInput","host","portStr","port","parseInt","privateKey","passphrase","useKeyAuth","sftpAuthKeyElement","sftpPassFieldsElement","sftpKeyFieldsElement","style","display","element","className","textContent","button","isLoading","disabled","providers","populateProviderForms","startSyncBtn","connectionStatusElement","providerId","githubProviders","currentSelection","provider","option","createElement","selected","appendChild","deleteBtn","confirm","alert","enabledProviders","html","details","historyElement","syncStatus","Object","keys","entries","map","data","providerInfo","sort","a","b","lastSyncTime","entry","timestamp","Date","toLocaleString","statusClass","statusIcon","lastSyncError","nodes","parentElement","depth","node","itemElement","add","contentElement","toggleElement","onclick","e","stopPropagation","childrenContainer","querySelector","toggleIcon","isExpanded","toggle","toggleDirectory","onchange","handleCheckboxChange","iconElement","labelElement","size","sizeElement","bytes","decimals","k","dm","sizes","i","Math","floor","parseFloat","pow","toFixed","formatBytes","children","isChecked","delete","closest","childCheckbox","childPath","updateParentCheckboxes","current","parentCheckbox","childrenCheckboxes","allChecked","noneChecked","cb","parentPath","rootElement","allCheckboxes","syncModeElement","useHashElement","syncMode","useHash","selectedPaths","Array","from","progressElement","progressBar","progressText","progressDetails","width","setAttribute","apiEndpoint","requestBody","prompt","join","isNaN","index","statusCheckCount","statusCheckInterval","setInterval","values","s","clearInterval","progress","min","toString","outputElement","showGitOutput","result","runGitCommand","command","statusMessage","output","text","div","escapeHtml","readyState"],"sourceRoot":""}